# Q.1 Write a program to create a NumPy 1D-array with 5 elements and perform basic operations like:
import numpy as np
a = np.array([3,7,1,5,9])
print(a)
#a) Addition of 2 in all the element
addition = a+2
print(addition)
#b) Multiply 3 with all the elements
multiply = a*3
print(multiply)
#c) Divide every element by 2
divide = a/2
print(divide)



#Q.2 Questions on Basic NumPy Array: 
#a) Reverse the NumPy array: arr = np.array([1, 2, 3, 6, 4, 5]) 
import numpy as np
arr = np.array([1,2,3,6,4,5])
print(arr[::-1])
#b) Find the most frequent value and their indice(s) in the following arrays:
#i. x = np.array([1,2,3,4,5,1,2,1,1,1])
x = np.array([1,2,3,4,5,1,2,1,1,1])
mostfrequentx = np.bincount(x).argmax()
print(mostfrequentx)
print(np.where(x == mostfrequentx))
#ii. y = np.array([1, 1, 1, 2, 3, 4, 2, 4, 3, 3, ]) 
y = np.array([1, 1, 1, 2, 3, 4, 2, 4, 3, 3, ]) 
mostfrequenty = np.bincount(y).argmax()
print(mostfrequenty)
print(np.where(x == mostfrequenty))



#Q.3 For the given 2-D array arr=np.array([10, 20, 30], [40, 50, 60], [70, 80, 90]), access elements using row and column indices as follows:
import numpy as np
arr=np.array([[10, 20, 30], [40, 50, 60], [70, 80, 90]])
#a) Access 1st row, 2nd column
print(arr[0,1])
#b) Access 3rd row, 1st column 
print(arr[2,0])



#Q.4 Write program to create an 1-D NumPy array named <<Your Name>> with evenly spaced 25 numbers from 10 to 100 using linspace(). Print the dimensions of the array, shape, total elements, the data type of each element and total number of bytes consumed by the array. Find the transpose of this array using reshape() attribute. Can we do the same with T attribute? 
import numpy as np
kashika = np.linspace(10,100,25)
print(kashika)
print(kashika.ndim)
print(kashika.shape)
print(kashika.size)
print(kashika.dtype)
print(kashika.nbytes)
print(kashika.reshape(25,1))
print(kashika.T) #.T does not work on 1D array if want to transpose 1D array use .reshape()



#Q.5 Create a 2-D Array of three rows and four columns, named ucs420_<your_name>> with following values â€“ 10, 20, 30, 40, 50, 60, 70, 80, 90, 15, 20, 35. Compute the mean, median, max, min, unique elements. Reshape the array to four rows and three columns and name it as reshaped_ ucs420_<your_name>>. Resize the array to two rows and three columns and name it as resized_ ucs420_<your_name>>.
import numpy as np
ucs420_kashika = np.array([10,20,30,40,50,60,70,80,90,15,20,35])
ucs420_kashika = ucs420_kashika.reshape(3,4)
print(ucs420_kashika)
print(np.mean(ucs420_kashika))
print(np.median(ucs420_kashika))
print(np.max(ucs420_kashika))
print(np.min(ucs420_kashika))
print(np.unique(ucs420_kashika))
reshape_ucs420_kashika = ucs420_kashika.reshape(4,3)
print(reshape_ucs420_kashika)
resize_ucs420_kashika = np.resize(ucs420_kashika,(2,3))
print(resize_ucs420_kashika)
