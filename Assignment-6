# Q1. Ask the user to enter a value (e.g., M) for a mathematical function.
#    ->Generate x values from -10 to 10 using np.linspace().
#    ->Compute y values for:
#         ->y= M⋅x^2
#         ->y=M⋅sin(x) 
#    ->Plot both functions in a single figure:
#         ->Use different colors and line styles.
#         ->Add legend, grid, and title.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
M = float(input("Enter a value for M: "))
x = np.linspace(-10, 10,10)
y1 = M * x ** 2
y2 = M * np.sin(x)
plt.figure(figsize=(8, 5))
plt.plot(x, y1, label='y = M * x^2', linestyle='--', color='blue')
plt.plot(x, y2, label='y = M * sin(x)', linestyle='-', color='red')
plt.legend()
plt.grid()
plt.title('Mathematical Function Plots')
plt.xlabel('x values')
plt.ylabel('y values')
plt.show()


# Q.2 Create a dataset of five subjects and scores.
#   ->Convert it into a Pandas DataFrame.
#   ->Plot the scores using a Seaborn bar plot with:
#      ->Different colors for each bar.
#      ->Annotations on top of each bar.
#      ->Title, axis labels, and grid. 
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
df = pd.DataFrame({'Subjects': ['Math', 'Science', 'English', 'History', 'Computer Science'],
                   'Scores': [85, 78, 90, 88, 95]})
plt.figure(figsize=(8, 5))
sns.barplot(x='Subjects', y='Scores', data=df, palette='viridis')
for i, score in enumerate(df['Scores']):
    plt.text(i, score + 1, str(score), ha='center', fontsize=12)
plt.title('Subject Scores')
plt.xlabel('Subjects')
plt.ylabel('Scores')
plt.grid(axis='y')
plt.show()


# Q3. Write a Python script to select your roll number as seed for NumPy and then generate a dataset of 50 values using np.random.randn().
#    ->Create a 2x2 subplot layout displaying:
#       ->Line plot showing cumulative sum.
#       ->Scatter plot with random noise.
#    ->Customize with titles, axis labels, and grids. 
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
roll_number = int(input("Enter your roll number as a seed: "))
np.random.seed(roll_number)
data = np.random.randn(50)
print(data)
fig, axes = plt.subplots(2, 2, figsize=(10, 8))
axes[0, 0].plot(np.cumsum(data), color='blue')
axes[0, 0].set_title("Cumulative Sum")
axes[0, 0].grid()

axes[0, 1].scatter(range(50), data, color='red')
axes[0, 1].set_title("Scatter Plot with Noise")
axes[0, 1].grid()

plt.tight_layout()
plt.show()


# Q.4 Download Data-set from the below link
# https://github.com/AnjulaMehto/MCA/blob/main/company_sales_data.csv
# Apply ‘seaborn’ library to do the following.
# 1. Read Total profit of all months and show it using a line plot.
# 2. Read all product sales data and show it using a multiline plot.
# 3. Plot bar chart for all the features/attributes.
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns 
data = pd.read_csv("company_sales_data.csv")

plt.figure(figsize=(8, 5))
plt.plot(data['total_profit'], marker='o', linestyle='-', color='blue')
plt.title('Total Profit Over Months')
plt.xlabel('Months')
plt.ylabel('Total Profit')
plt.grid()
plt.show()

data.plot(x='month_number', y=data.columns[1:-1], marker='o', figsize=(10, 6))
plt.title('Product Sales Over Months')
plt.xlabel('Month')
plt.ylabel('Units Sold')
plt.legend()
plt.grid()
plt.show()

plt.figure(figsize=(10, 6))
data.plot(kind='bar', figsize=(10, 6))
plt.title('Company Sales Data')
plt.xlabel('Months')
plt.ylabel('Values')
plt.grid()
plt.show()
