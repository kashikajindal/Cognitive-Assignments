#1. Create a dataset as follow in the table.
import pandas as pd
data={
    "Tid" : [1,2,3,4,5,6,7,8,9,10],
    "Refund" : ["Yes","No","No","Yes","No","No","Yes","No","No","No"],
    "Marital Status" : ["Single","Married","Single","Married","Divorced","Married","Divorced","Single","Married","Single"],
    "Taxable Income" : ["125K","100K","70K","120K","95K","60K","220K","85K","75K","90K"],
    "Cheat" : ["No","No","No","No","Yes","No","No","Yes","No","Yes"]
}
df = pd.DataFrame(data)
print(df)



#2. From the above table that you have created, locate row 0, 4, 7 and 8 using DataFrame. 
print(df.loc[[0,4,7,8]])



#3. Navigate the DataFrame and do the following task for the table created in question 1:
    #1. Select row from index 3 to 7.
print(df.iloc[3:7])
    #2. Select row from index 4 to 8, and column 2 to 4.
print(df.iloc[4:8,2:4])
    #3. Select all rows with column index 1 to 3 (include index 3 during selection). 
print(df.iloc[:,1:4])



#4. Read a csv file and display its first five rows.
import pandas as pd
df = pd.read_csv('Iris.csv')
print(df.head())



#5.  From the csv file (uploaded in the Q.4) delete row 4, and delete column 3. Display the result. 
df = df.drop(index=4)
df = df.drop(columns=df.columns[3])
print(df)




#6. Create a sample dataset (employees.csv) containing information about employees in a company. 
import pandas as pd
Employee={
    "Employee_Id" : [101,102,103,104,105],
    "Name" : ['Alice','Bob','Charlie','Diana','Edward'],
    "Department" : ['HR','IT','IT','Marketing','Sales'],
    "Age" : [29,34,41,28,38],
    "Salary" : [50000,70000,65000,55000,60000],
    "Years_of_Experience" : [4,8,10,3,12],
    "Joining_Date" : ['2020-03-15','2017-07-19','2013-06-01','2021-02-10','2010-11-25'],
    "Gender" : ['Female','Male','Male','Female','Male'],
    "Bonus" : [5000,7000,6000,4500,5000],
    "Rating" : [4.5,4.0,3.8,4.7,3.5]
}
Employee_data = pd.DataFrame(Employee)
print(Employee_data)

#a) Shape (number of rows and columns) of the DataFrame
print("Shape of the DataFrame : ")
print(Employee_data.shape)

#b) Summary of the DataFrame that includes the data types and non-null counts for each column. 
print("Summary of the DataFrame : ")
Employee_data.info()

#c) Generate descriptive statistics.
print("descriptive statistics : ")
print(Employee_data.describe())

#d) Display the first 5 rows and last 3 rows of the dataset.
print("the first 5 rows and last 3 rows of the dataset :")
print(Employee_data.head())
print(Employee_data.tail(3))

#e) Calculate the following statistics from the dataset:
       #i. The average salary of employees. 
average_salary = Employee_data["Salary"].mean()
print(f"The average salary of employees : {average_salary}")
       #ii. The total bonus paid to all employees.
total_bonus = Employee_data["Bonus"].sum()
print(f"The total bonus paid to all employees : {total_bonus}")
       #iii. The youngest employee's age. 
youngest_employee = Employee_data["Age"].min()
print(f"The youngest employee's age : {youngest_employee}")
       #iv. The highest performance rating.
highest_performance = Employee_data["Rating"].max()
print(f"The highest performance rating : {highest_performance}")
#f) Sort the DataFrame by the Salary column in descending order. 
sort_salary = Employee_data.sort_values(by="Salary",ascending=False)
print(f"Sorted dataframe by salary : {sort_salary}")
#g) Add a new column that categorizes employees based on their performance rating: 
         #i. Excellent for ratings >= 4.5
         #ii. Good for ratings >= 4.0 but < 4.5
         #iii. Average for ratings < 4.0 
def rating_categorized(rating):
    if(rating >= 4.5):
        return "Excellent"
    elif 4 <= rating < 4.5:
        return "Good"
    else:
        return "Average"
Employee_data["Performance"] = Employee_data["Rating"].apply(rating_categorized)
print(Employee_data)  
#h) Identify missing values in the DataFrame
print(Employee_data.isnull())
#i) Rename the Employee_ID column to ID. 
Employee_data.rename(columns={"Employee_Id":"ID"},inplace=True)
print(Employee_data)
#j) Find all employees who:
           #i. Have more than 5 years of experience.
Experience = Employee_data[Employee_data["Years_of_Experience"]>5]
print(Experience)
           #ii. Belong to the IT department. 
IT_department = Employee_data[Employee_data["Department"] == "IT"]
print(IT_department)
#k) Modify the dataset by adding a new column, Tax, which deducts 10% of the Salary
def deduct_salary(Salary):
        return (Salary*(1/10))
Employee_data["Tax"] = Employee_data["Salary"].apply(deduct_salary)
print(Employee_data)
#l) Save the modified DataFrame (with added columns) to a new CSV file
Employee_data.to_csv("new.csv")
